use_condaenv?
.
?use_condaenv
library(reticulate)
library(reticulate)
z<-c("shiny","visNetwork","igraph","foreign","haven","dplyr")
z<-c("shiny","visNetwork","igraph","foreign","haven","dplyr", "leiden")
lapply(z, library, character.only = TRUE)
library(reticulate)
reticulate::conda_install("r-reticulate", "leidenalg", channel = "vtraag")
devtools::install_github("rstudio/reticulate", ref = "86ebb56")
install.packages(SpatialRDD)
install.packages(stargazer) # easy way to make model output look more appealing (R-inline, html, or latex)
install.packages('SpatialRDD')
install.packages('stargazer') # easy way to make model output look more appealing (R-inline, html, or latex)
devtools::install_github("axlehner/SpatialRDD")
devtools::install_github("axlehner/SpatialRDD")
z<-c("SpatialRDD","stargazer","sp","rgdal","raster","rgeos","dplyr","tidyverse","cleangeo","readstata13","geosphere","sf")
#z<-c("sp","stats","dplyr","ggplot2","ggmap","dplyr", "sf", "sp","rgdal","maptools","rgeos","raster","sf","raster","stars","maps","geosphere","foreign","tidyverse","plyr","cleangeo","hablar","haven","dplyr","maps","viridis","cartogram","tidyverse","broom","readstata13")
#lapply(z, install.packages, character.only = TRUE)
lapply(z, library, character.only = TRUE)
devtools::install_github("axlehner/SpatialRDD")
z<-c("SpatialRDD","stargazer","sp","rgdal","raster","rgeos","dplyr","tidyverse","cleangeo","readstata13","geosphere","sf")
#z<-c("sp","stats","dplyr","ggplot2","ggmap","dplyr", "sf", "sp","rgdal","maptools","rgeos","raster","sf","raster","stars","maps","geosphere","foreign","tidyverse","plyr","cleangeo","hablar","haven","dplyr","maps","viridis","cartogram","tidyverse","broom","readstata13")
#lapply(z, install.packages, character.only = TRUE)
lapply(z, library, character.only = TRUE)
install.packages("devtools")
library("devtools")
library(usethis)
library(devtools)
devtools::install_github("axlehner/SpatialRDD")
z<-c("SpatialRDD","stargazer","sp","rgdal","raster","rgeos","dplyr","tidyverse","cleangeo","readstata13","geosphere","sf")
#z<-c("sp","stats","dplyr","ggplot2","ggmap","dplyr", "sf", "sp","rgdal","maptools","rgeos","raster","sf","raster","stars","maps","geosphere","foreign","tidyverse","plyr","cleangeo","hablar","haven","dplyr","maps","viridis","cartogram","tidyverse","broom","readstata13")
#lapply(z, install.packages, character.only = TRUE)
lapply(z, library, character.only = TRUE)
rm(list=ls())
cat("\014")
local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)}) #set repo
#Load Packages
pkg<-list("dplyr","haven","lubridate",'openxlsx','foreign')
lapply(pkg, require, character.only=T)
rm(pkg)
dta<-read_dta("C:/Users/cdelo/Dropbox/covid-project/data/UNIANDES/processed/Datos_Salesforce_treated_feb19.dta")
#According to my encoding fecharecepciÃ always comes as  fecharecepciónmuestralab. Change in CPu if not your case
dta_covida<- dta %>%
mutate(test_day=as.Date(fechatomamuestra, "%d/%m/%Y"),
lab_reception=as.Date(fecharecepciónmuestralab, "%d/%m/%Y"),#, origin="1960-01-01"),
fechahoradeaperturaalone1=as.Date(fechahoradeaperturaalone1, "%d/%m/%Y"),#, origin="1960-01-01"),
test_day= ifelse(is.na(test_day), lab_reception,test_day), #fix test_day with fecharecepciÃ³nmuestralab
test_day= ifelse(is.na(test_day), fechahoradeaperturaalone1,test_day), #fix test_day with fecharecepciÃ³nmuestralab
test_day= as_date(test_day),
#exclude=ifelse( symptom==1 | contact_COVID==1 | contact==1,1,0),
mes=month(test_day),
year=year(test_day),
semana=week(test_day),
stratum = case_when(stratum %in% c(1, 2) ~ 1,
stratum %in% c(3, 4) ~ stratum - 1,
stratum %in% c(5, 6) ~ 4),
#date_m=dmy(paste("01",mes,year,sep="-")),
date_m=floor_date(test_day, "month"),
semana=ifelse(semana==53,52,semana),
date_week=paste(year,semana,"1",sep="-"),
date_week=as.Date(date_week, "%Y-%U-%u")
)
# sum(is.na(dta_covida$test_day))
# sum(is.na(dta_covida$date_m))
# Create Occupations ------------------------------------------------------------------
#ocupation_table<-read.xlsx("Data/casos_ocupaciones_bogota_feb_1_0.xlsx")
ocupation_table<-read.xlsx("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/casos_ocupaciones_bogota_feb_1_0.xlsx")
crosswalk_desag_2_agg<- ocupation_table %>%
mutate(ocupacion_desagregada=ifelse(is.na(ocupacion_desagregada_fix),ocupacion_desagregada,ocupacion_desagregada_fix)) %>%
distinct(ocupacion_desagregada,ocupacionasis) %>%
rename(ocupacion_desagregada_fx=ocupacion_desagregada)
dta_covida<-dta_covida %>% left_join(.,crosswalk_desag_2_agg)
dta_covida$ocupacion_desagregada_fx[grepl("universitario",dta_covida$ocupacion_desagregada_fx)]<-"profesor universitario"
dta_covida$ocupacion_desagregada_fx[grepl("secundaria",dta_covida$ocupacion_desagregada_fx)]<-"profesor secundaria"
dta_covida$ocupacion_desagregada_fx[grepl("empresas",dta_covida$ocupacion_desagregada_fx)]<-'directores y gerentes de empresas'
dta_covida$ocupacion_desagregada_fx[grepl("viajes",dta_covida$ocupacion_desagregada_fx)]<-'empleados agencias de viajes'
dta_covida$ocupacion_desagregada_fx[grepl("personal aseo",dta_covida$ocupacion_desagregada_fx)]<-'personal limpieza'
dta_covida$ocupacion_desagregada_fx[grepl("financieros",dta_covida$ocupacion_desagregada_fx)]<-'personal servicios financieros'
dta_covida$ocupacion_desagregada_fx[grepl("transporte",dta_covida$ocupacion_desagregada_fx)]<-'personal transporte'
dta_covida$ocup_cat<-NA
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='abogados']<-'abogados'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agricultores y afines']<-'agricultores y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='ama de casa']<-'ama de casa'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='desempleado']<-'desempleado'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='pensionado']<-'pensionado'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='cuidador de niños']<-'cuidador de niños'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='artistas']<-'artistas y actividades culturales'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal actividades culturales']<-'artistas y actividades culturales'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='biologo y afines']<-'biologo y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='geologo']<-'biologo y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='arquitectos']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='carpinteros y afines']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='costurero y afines']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='zapatero']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='directores y gerentes de empresas']<-'directores y gerentes de empresas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='entrenadores actividades deportivas']<-'entrenadores actividades deportivas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='diseñador web']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='ingeniero']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal servicios informaticos']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingenieria mecanica']<-'personal ingenieria mecanica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='mensajero']<-'mensajero'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='guardias seguridad']<-'guardias seguridad'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='bomberos']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='militar']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='oficiales de la fuerza aerea']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='policia']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='obreros de construccion']<-'obreros de construccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='electricista']<-'obreros de construccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='peluqueros y afines']<-'peluqueros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='periodistas y escritores']<-'periodistas y escritores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='mesero']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='panadero y afines']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal de restaurantes']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='cocineros']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal de servicio a bordo']<-'personal de servicio a bordo'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='lavadores de vehiculos']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal limpieza']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='recolectores de basura']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agente de seguros y seguridad social']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agente inmobiliario']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='empleados agencias de viajes']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='empleados de centros de llamadas']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal secretaria']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='madre comunitaria']<-'personal servicio comunitario'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal religioso']<-'personal servicio comunitario'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal servicios financieros']<-'personal servicios financieros'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal transporte']<-'personal transporte'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor preescolar']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor primaria']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor secundaria']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor universitario']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='estudiante']<-'estudiante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='economistas']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='politologo y afines']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='psicologos']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='sociologo, antropologo']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='quimicos']<-'quimicos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='servicios apoyo produccion']<-'servicios apoyo produccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='taxistas']<-'taxistas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='asistentes medicos']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='enfermero']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='fisioterapeuta']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='medico']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='nutricionista']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='odontologos']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='optometrista']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='veterinario']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingresos hospitalarios']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor ambulante']<-'vendedor ambulante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='farmaceutico']<-'vendedor tienda'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor tienda']<-'vendedor tienda'
dta_covida<- dta_covida %>% mutate(ocup_cat_agg=ifelse(ocup_cat=="biologo y afines" |
ocup_cat=="abogados"|
ocup_cat=="ingeniero y servicios informaticos" |
ocup_cat=="personal ingenieria mecanica" |
ocup_cat=="psicologos, sociologos y afines", "Abogados, Ingenieros, Psicólogos, Biólogos, y Sociólogos",
ifelse(ocup_cat=="vendedor ambulante" |
ocup_cat=="peluqueros y afines" |
ocup_cat=="vendedor tienda", "vendedores, restaurantes, y peluqueros",
ifelse(ocup_cat=="desempleado"|
ocup_cat=="ama de casa" |
ocup_cat=="pensionado","amas de casa, pensionados, y desempleados",
ifelse(ocup_cat=="cuidador de niños" |
ocup_cat=="personal limpieza",
"personal de limpieza y cuidadores de niños",
ifelse(ocup_cat=="personal transporte" |
ocup_cat=="guardias seguridad" |
ocup_cat=="militares y fuerza publica" |
ocup_cat=="taxistas", "guardias de seguridad, taxistas y otros transportistas",
ifelse(ocup_cat=="estudiante" |
ocup_cat=="profesores", "estudiantes y profesores",
ifelse(ocup_cat=="carpinteros y afines" |
ocup_cat=="obreros de construccion", "obreros de construcción y carpinteros",
ifelse(ocup_cat=="artistas y actividades culturales" |
ocup_cat=="periodistas y escritores","periodistas, escritores, y artistas",ocup_cat)))))))))
descriptive_ocups_agg<- dta_covida %>%
group_by(ocup_cat_agg,ocup_cat,ocupacion_desagregada_fx) %>%
summarise(positive=mean(positive, na.rm=TRUE),n=n(),.groups='drop')
savethis <- dta_covida %>%
select(ocup_cat,ocupacion_desagregada_fx, ocupacionasis, ocupacion_desagregada)%>%
filter(!is.na(ocup_cat))  #Missing ocup_cat
population<-read_dta("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/pob_cats.dta")
savethis2 <- merge(savethis,population, by="ocup_cat")
View(savethis2)
write_dta(savethis2, "C:/Users/cdelo/Dropbox/Iceberg Paper/Data/cats_new_fixed.dta")
savethis<- savethis %>%
group_by(ocup_cat,ocupacionasis) %>%
summarise(positive=first(ocupacion_desagregada))
savethis2 <- merge(savethis,population, by="ocup_cat")
write_dta(savethis2, "C:/Users/cdelo/Dropbox/Iceberg Paper/Data/cats_new_fixed.dta")
dta<-read_dta("C:/Users/cdelo/Dropbox/covid-project/data/UNIANDES/processed/Datos_Salesforce_treated_feb19.dta")
#According to my encoding fecharecepciÃ always comes as  fecharecepciónmuestralab. Change in CPu if not your case
dta_covida<- dta %>%
mutate(test_day=as.Date(fechatomamuestra, "%d/%m/%Y"),
lab_reception=as.Date(fecharecepciónmuestralab, "%d/%m/%Y"),#, origin="1960-01-01"),
fechahoradeaperturaalone1=as.Date(fechahoradeaperturaalone1, "%d/%m/%Y"),#, origin="1960-01-01"),
test_day= ifelse(is.na(test_day), lab_reception,test_day), #fix test_day with fecharecepciÃ³nmuestralab
test_day= ifelse(is.na(test_day), fechahoradeaperturaalone1,test_day), #fix test_day with fecharecepciÃ³nmuestralab
test_day= as_date(test_day),
#exclude=ifelse( symptom==1 | contact_COVID==1 | contact==1,1,0),
mes=month(test_day),
year=year(test_day),
semana=week(test_day),
stratum = case_when(stratum %in% c(1, 2) ~ 1,
stratum %in% c(3, 4) ~ stratum - 1,
stratum %in% c(5, 6) ~ 4),
#date_m=dmy(paste("01",mes,year,sep="-")),
date_m=floor_date(test_day, "month"),
semana=ifelse(semana==53,52,semana),
date_week=paste(year,semana,"1",sep="-"),
date_week=as.Date(date_week, "%Y-%U-%u")
)
# sum(is.na(dta_covida$test_day))
# sum(is.na(dta_covida$date_m))
# Create Occupations ------------------------------------------------------------------
#ocupation_table<-read.xlsx("Data/casos_ocupaciones_bogota_feb_1_0.xlsx")
ocupation_table<-read.xlsx("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/casos_ocupaciones_bogota_feb_1_0.xlsx")
crosswalk_desag_2_agg<- ocupation_table %>%
mutate(ocupacion_desagregada=ifelse(is.na(ocupacion_desagregada_fix),ocupacion_desagregada,ocupacion_desagregada_fix)) %>%
distinct(ocupacion_desagregada,ocupacionasis) %>%
rename(ocupacion_desagregada_fx=ocupacion_desagregada)
dta_covida<-dta_covida %>% left_join(.,crosswalk_desag_2_agg)
dta_covida$ocupacion_desagregada_fx[grepl("universitario",dta_covida$ocupacion_desagregada_fx)]<-"profesor universitario"
dta_covida$ocupacion_desagregada_fx[grepl("secundaria",dta_covida$ocupacion_desagregada_fx)]<-"profesor secundaria"
dta_covida$ocupacion_desagregada_fx[grepl("empresas",dta_covida$ocupacion_desagregada_fx)]<-'directores y gerentes de empresas'
dta_covida$ocupacion_desagregada_fx[grepl("viajes",dta_covida$ocupacion_desagregada_fx)]<-'empleados agencias de viajes'
dta_covida$ocupacion_desagregada_fx[grepl("personal aseo",dta_covida$ocupacion_desagregada_fx)]<-'personal limpieza'
dta_covida$ocupacion_desagregada_fx[grepl("financieros",dta_covida$ocupacion_desagregada_fx)]<-'personal servicios financieros'
dta_covida$ocupacion_desagregada_fx[grepl("transporte",dta_covida$ocupacion_desagregada_fx)]<-'personal transporte'
dta_covida$ocup_cat<-NA
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='abogados']<-'abogados'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agricultores y afines']<-'agricultores y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='ama de casa']<-'ama de casa'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='desempleado']<-'desempleado'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='pensionado']<-'pensionado'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='cuidador de niños']<-'cuidador de niños'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='artistas']<-'artistas y actividades culturales'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal actividades culturales']<-'artistas y actividades culturales'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='biologo y afines']<-'biologo y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='geologo']<-'biologo y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='arquitectos']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='carpinteros y afines']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='costurero y afines']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='zapatero']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='directores y gerentes de empresas']<-'directores y gerentes de empresas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='entrenadores actividades deportivas']<-'entrenadores actividades deportivas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='diseñador web']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='ingeniero']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal servicios informaticos']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingenieria mecanica']<-'personal ingenieria mecanica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='mensajero']<-'mensajero'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='guardias seguridad']<-'guardias seguridad'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='bomberos']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='militar']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='oficiales de la fuerza aerea']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='policia']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='obreros de construccion']<-'obreros de construccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='electricista']<-'obreros de construccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='peluqueros y afines']<-'peluqueros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='periodistas y escritores']<-'periodistas y escritores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='mesero']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='panadero y afines']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal de restaurantes']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='cocineros']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal de servicio a bordo']<-'personal de servicio a bordo'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='lavadores de vehiculos']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal limpieza']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='recolectores de basura']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agente de seguros y seguridad social']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agente inmobiliario']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='empleados agencias de viajes']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='empleados de centros de llamadas']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal secretaria']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='madre comunitaria']<-'personal servicio comunitario'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal religioso']<-'personal servicio comunitario'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal servicios financieros']<-'personal servicios financieros'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal transporte']<-'personal transporte'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor preescolar']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor primaria']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor secundaria']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor universitario']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='estudiante']<-'estudiante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='economistas']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='politologo y afines']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='psicologos']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='sociologo, antropologo']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='quimicos']<-'quimicos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='servicios apoyo produccion']<-'servicios apoyo produccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='taxistas']<-'taxistas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='asistentes medicos']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='enfermero']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='fisioterapeuta']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='medico']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='nutricionista']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='odontologos']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='optometrista']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='veterinario']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingresos hospitalarios']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor ambulante']<-'vendedor ambulante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='farmaceutico']<-'vendedor tienda'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor tienda']<-'vendedor tienda'
dta_covida<- dta_covida %>% mutate(ocup_cat_agg=ifelse(ocup_cat=="biologo y afines" |
ocup_cat=="abogados"|
ocup_cat=="ingeniero y servicios informaticos" |
ocup_cat=="personal ingenieria mecanica" |
ocup_cat=="psicologos, sociologos y afines", "Abogados, Ingenieros, Psicólogos, Biólogos, y Sociólogos",
ifelse(ocup_cat=="vendedor ambulante" |
ocup_cat=="peluqueros y afines" |
ocup_cat=="vendedor tienda", "vendedores, restaurantes, y peluqueros",
ifelse(ocup_cat=="desempleado"|
ocup_cat=="ama de casa" |
ocup_cat=="pensionado","amas de casa, pensionados, y desempleados",
ifelse(ocup_cat=="cuidador de niños" |
ocup_cat=="personal limpieza",
"personal de limpieza y cuidadores de niños",
ifelse(ocup_cat=="personal transporte" |
ocup_cat=="guardias seguridad" |
ocup_cat=="militares y fuerza publica" |
ocup_cat=="taxistas", "guardias de seguridad, taxistas y otros transportistas",
ifelse(ocup_cat=="estudiante" |
ocup_cat=="profesores", "estudiantes y profesores",
ifelse(ocup_cat=="carpinteros y afines" |
ocup_cat=="obreros de construccion", "obreros de construcción y carpinteros",
ifelse(ocup_cat=="artistas y actividades culturales" |
ocup_cat=="periodistas y escritores","periodistas, escritores, y artistas",ocup_cat)))))))))
descriptive_ocups_agg<- dta_covida %>%
group_by(ocup_cat_agg,ocup_cat,ocupacion_desagregada_fx) %>%
summarise(positive=mean(positive, na.rm=TRUE),n=n(),.groups='drop')
savethis <- dta_covida %>%
select(ocup_cat,ocupacion_desagregada_fx, ocupacionasis, ocupacion_desagregada)%>%
filter(!is.na(ocup_cat))  #Missing ocup_cat
savethis<- savethis %>%
group_by(ocup_cat,ocupacionasis) %>%
summarise(positive=first(ocupacion_desagregada))
population<-read_dta("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/pob_cats.dta")
savethis2 <- merge(savethis,population, by="ocup_cat")
write_dta(savethis2, "C:/Users/cdelo/Dropbox/Iceberg Paper/Data/cats_new_fixed.dta")
library("rgdal")
library("geojsonio")
library("DescTools")
coles<- geojson_read("C:/Users/cdelo/Desktop/coles_col.json", what = "sp")
library("rgdal")
library("geojsonio")
library("DescTools")
coles<- geojson_read("C:/Users/cdelo/Desktop/coles_col.json", what = "sp")
library("rjson")
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.json", collapse=""))
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.json", collapse="")
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.json")
?fromJSON
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.txt")
json_data <- fromJSON(file="C:/Users/cdelo/Desktop/coles_col.txt")
install.packages('sp')
install.packages("sp")
install.packes(raster)
install.packages('raster')
install.packages("raster")
sessionInfo()
rm(list=ls())
cat("\014")
local({r
rm(list=ls())
cat("\014")
local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)}) #set repo
rm(list=ls())
cat("\014")
local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)}) #set repo
)
rm(list=ls())
cat("\014")
local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)}) #set repo
z<-c("sf","sp","rgdal","raster","rgeos","dplyr","tidyverse","cleangeo","readstata13","geosphere","sf")
lapply(z, library, character.only = TRUE)
rm(z)
sessionInfo()
libPaths()
.libPaths()
# PROJECT :     	Mining-Oil-Gallup
# AUTHOR :				CDLR
# PURPOSE :				create pollution variables at the hospital level.
#--------------------------------------------------------------------
# INITIALIZE
#--------------------------------------------------------------------
#Clean the workspace
rm(list=ls())
cat("\014")
local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)}) #set repo
#Load Packages
#"htmlwidgets","widgetframe","leaflet"
z<-c("sp","rgdal","raster","rgeos","dplyr","tidyverse","cleangeo","readstata13","geosphere","sf")
lapply(z, library, character.only = TRUE)
rm(z)
# Paths-----
user = "C:/Users/cdelo/Dropbox/" #Aquí el directorio personal, el resto es idéntico para todos.
data = paste(user,"Mining_HK_Chile/HEALTH/Datos", sep="")
dataeduc = paste(user,"Mining_HK_Chile/EDUCACION/Estimation", sep="")
datapol = paste(user,"Mining_HK_Chile/HEALTH/Datos/python_data_code/data_code3/processed/aero", sep="")
export = paste(user,"Mining_HK_Chile/HEALTH/Datos/pollute/hospitals/aero", sep="")
setwd(data)
# Read Map ------
setwd(dataeduc)
comunas_base <- readOGR(dsn="DATA/Admin_maps/Comunas", layer="comunas")
setwd(data)
salud <-  readOGR(dsn="hospitals/establecimientos_salud_todos_14052021", layer="establec_salud_todos_14_05_2021")
# repare geometry----
proj<-crs(comunas_base)
salud <- spTransform(salud,proj)
# To make buffers you need to transform to cartesian 2D
salud_m <- spTransform(salud, CRS=CRS("+init=epsg:9155")) # si queremos nos podemos poner fancies y cortar entre 19 y 18. Por el momento lo dejamos así.
#--Give hospitals ID and get clean coordinates----
salud_m$idsalud <- 1:nrow(salud_m)
#salud_m$lati_sal<-salud_m@coords[,2]
#salud_m$long_sal<-salud_m@coords[,1]
names(salud_m)[names(salud_m) == "LATITUD"] <- "lati_sal"  # change the name of var to identify better
names(salud_m)[names(salud_m) == "LONGITUD"] <- "long_sal"  # change the name of var to identify better
#colegio<- na.omit
table(salud_m$TIPO)
#Load Packages
z<-c("rgdal", "geojsonio", "DescTools", "rjson", "dplyr","tidyverse", "sf") # some classic packages that I use.
lapply(z, library, character.only = TRUE)
rm(z)
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Instalaciones/")
# fixing the geometries...
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3, StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, rjson::fromJSON(file = path))
}
insta <- lapply(names,get)
insta<-lapply(insta, function(i){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
i<- rjson::toJSON(i)
; return(i)
}
)
for (i in seq_along(insta)) {
filename = paste(names[i],".json",sep="")
writeLines(insta[[i]], filename)
}
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3 , StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, geojson_read(path, what = "sp"))
}
top<-length(names)
splist<-list()
for (j in 1:top){
z <- j
sEOG <- paste("Instalaciones_Mineras-", z, sep="")
dEOG <- get(paste("Instalaciones_Mineras-", z, sep=""))
splist[[sEOG]] <-dEOG
}
Instalaciones = do.call(rbind, splist)
Instalaciones<-st_as_sf(Instalaciones)
Instalaciones<-Instalaciones %>%
filter(LATITUD_SU!=0)
Instalaciones<-as(Instalaciones, "Spatial")
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Instalaciones/")
setwd("C:/Users/cdelo/Documents/GitHub/Chile_Mining_Cadastre/Instalaciones/")
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3, StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, rjson::fromJSON(file = path))
}
insta <- lapply(names,get)
insta<-lapply(insta, function(i){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
i<- rjson::toJSON(i)
; return(i)
}
)
for (i in seq_along(insta)) {
filename = paste(names[i],".json",sep="")
writeLines(insta[[i]], filename)
}
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3 , StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, geojson_read(path, what = "sp"))
}
warnings()
top<-length(names)
splist<-list()
for (j in 1:top){
z <- j
sEOG <- paste("Instalaciones_Mineras-", z, sep="")
dEOG <- get(paste("Instalaciones_Mineras-", z, sep=""))
splist[[sEOG]] <-dEOG
}
Instalaciones = do.call(rbind, splist)
Instalaciones<-st_as_sf(Instalaciones)
Instalaciones<-Instalaciones %>%
filter(LATITUD_SU!=0)
Instalaciones<-as(Instalaciones, "Spatial")
setwd("C:/Users/cdelo/Documents/GitHub/Chile_Mining_Cadastre/")
writeOGR(Instalaciones, "Instalaciones" ,driver="ESRI Shapefile", layer="Instalaciones")
