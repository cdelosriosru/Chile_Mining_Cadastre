dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingresos hospitalarios']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor ambulante']<-'vendedor ambulante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='farmaceutico']<-'vendedor tienda'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor tienda']<-'vendedor tienda'
dta_covida<- dta_covida %>% mutate(ocup_cat_agg=ifelse(ocup_cat=="biologo y afines" |
ocup_cat=="abogados"|
ocup_cat=="ingeniero y servicios informaticos" |
ocup_cat=="personal ingenieria mecanica" |
ocup_cat=="psicologos, sociologos y afines", "Abogados, Ingenieros, Psicólogos, Biólogos, y Sociólogos",
ifelse(ocup_cat=="vendedor ambulante" |
ocup_cat=="peluqueros y afines" |
ocup_cat=="vendedor tienda", "vendedores, restaurantes, y peluqueros",
ifelse(ocup_cat=="desempleado"|
ocup_cat=="ama de casa" |
ocup_cat=="pensionado","amas de casa, pensionados, y desempleados",
ifelse(ocup_cat=="cuidador de niños" |
ocup_cat=="personal limpieza",
"personal de limpieza y cuidadores de niños",
ifelse(ocup_cat=="personal transporte" |
ocup_cat=="guardias seguridad" |
ocup_cat=="militares y fuerza publica" |
ocup_cat=="taxistas", "guardias de seguridad, taxistas y otros transportistas",
ifelse(ocup_cat=="estudiante" |
ocup_cat=="profesores", "estudiantes y profesores",
ifelse(ocup_cat=="carpinteros y afines" |
ocup_cat=="obreros de construccion", "obreros de construcción y carpinteros",
ifelse(ocup_cat=="artistas y actividades culturales" |
ocup_cat=="periodistas y escritores","periodistas, escritores, y artistas",ocup_cat)))))))))
descriptive_ocups_agg<- dta_covida %>%
group_by(ocup_cat_agg,ocup_cat,ocupacion_desagregada_fx) %>%
summarise(positive=mean(positive, na.rm=TRUE),n=n(),.groups='drop')
savethis <- dta_covida %>%
select(ocup_cat,ocupacion_desagregada_fx, ocupacionasis, ocupacion_desagregada)%>%
filter(!is.na(ocup_cat))  #Missing ocup_cat
population<-read_dta("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/pob_cats.dta")
savethis2 <- merge(savethis,population, by="ocup_cat")
View(savethis2)
write_dta(savethis2, "C:/Users/cdelo/Dropbox/Iceberg Paper/Data/cats_new_fixed.dta")
savethis<- savethis %>%
group_by(ocup_cat,ocupacionasis) %>%
summarise(positive=first(ocupacion_desagregada))
savethis2 <- merge(savethis,population, by="ocup_cat")
write_dta(savethis2, "C:/Users/cdelo/Dropbox/Iceberg Paper/Data/cats_new_fixed.dta")
dta<-read_dta("C:/Users/cdelo/Dropbox/covid-project/data/UNIANDES/processed/Datos_Salesforce_treated_feb19.dta")
#According to my encoding fecharecepciÃ always comes as  fecharecepciónmuestralab. Change in CPu if not your case
dta_covida<- dta %>%
mutate(test_day=as.Date(fechatomamuestra, "%d/%m/%Y"),
lab_reception=as.Date(fecharecepciónmuestralab, "%d/%m/%Y"),#, origin="1960-01-01"),
fechahoradeaperturaalone1=as.Date(fechahoradeaperturaalone1, "%d/%m/%Y"),#, origin="1960-01-01"),
test_day= ifelse(is.na(test_day), lab_reception,test_day), #fix test_day with fecharecepciÃ³nmuestralab
test_day= ifelse(is.na(test_day), fechahoradeaperturaalone1,test_day), #fix test_day with fecharecepciÃ³nmuestralab
test_day= as_date(test_day),
#exclude=ifelse( symptom==1 | contact_COVID==1 | contact==1,1,0),
mes=month(test_day),
year=year(test_day),
semana=week(test_day),
stratum = case_when(stratum %in% c(1, 2) ~ 1,
stratum %in% c(3, 4) ~ stratum - 1,
stratum %in% c(5, 6) ~ 4),
#date_m=dmy(paste("01",mes,year,sep="-")),
date_m=floor_date(test_day, "month"),
semana=ifelse(semana==53,52,semana),
date_week=paste(year,semana,"1",sep="-"),
date_week=as.Date(date_week, "%Y-%U-%u")
)
# sum(is.na(dta_covida$test_day))
# sum(is.na(dta_covida$date_m))
# Create Occupations ------------------------------------------------------------------
#ocupation_table<-read.xlsx("Data/casos_ocupaciones_bogota_feb_1_0.xlsx")
ocupation_table<-read.xlsx("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/casos_ocupaciones_bogota_feb_1_0.xlsx")
crosswalk_desag_2_agg<- ocupation_table %>%
mutate(ocupacion_desagregada=ifelse(is.na(ocupacion_desagregada_fix),ocupacion_desagregada,ocupacion_desagregada_fix)) %>%
distinct(ocupacion_desagregada,ocupacionasis) %>%
rename(ocupacion_desagregada_fx=ocupacion_desagregada)
dta_covida<-dta_covida %>% left_join(.,crosswalk_desag_2_agg)
dta_covida$ocupacion_desagregada_fx[grepl("universitario",dta_covida$ocupacion_desagregada_fx)]<-"profesor universitario"
dta_covida$ocupacion_desagregada_fx[grepl("secundaria",dta_covida$ocupacion_desagregada_fx)]<-"profesor secundaria"
dta_covida$ocupacion_desagregada_fx[grepl("empresas",dta_covida$ocupacion_desagregada_fx)]<-'directores y gerentes de empresas'
dta_covida$ocupacion_desagregada_fx[grepl("viajes",dta_covida$ocupacion_desagregada_fx)]<-'empleados agencias de viajes'
dta_covida$ocupacion_desagregada_fx[grepl("personal aseo",dta_covida$ocupacion_desagregada_fx)]<-'personal limpieza'
dta_covida$ocupacion_desagregada_fx[grepl("financieros",dta_covida$ocupacion_desagregada_fx)]<-'personal servicios financieros'
dta_covida$ocupacion_desagregada_fx[grepl("transporte",dta_covida$ocupacion_desagregada_fx)]<-'personal transporte'
dta_covida$ocup_cat<-NA
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='abogados']<-'abogados'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agricultores y afines']<-'agricultores y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='ama de casa']<-'ama de casa'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='desempleado']<-'desempleado'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='pensionado']<-'pensionado'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='cuidador de niños']<-'cuidador de niños'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='artistas']<-'artistas y actividades culturales'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal actividades culturales']<-'artistas y actividades culturales'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='biologo y afines']<-'biologo y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='geologo']<-'biologo y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='arquitectos']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='carpinteros y afines']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='costurero y afines']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='zapatero']<-'carpinteros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='directores y gerentes de empresas']<-'directores y gerentes de empresas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='entrenadores actividades deportivas']<-'entrenadores actividades deportivas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='diseñador web']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='ingeniero']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal servicios informaticos']<-'ingeniero y servicios informaticos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingenieria mecanica']<-'personal ingenieria mecanica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='mensajero']<-'mensajero'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='guardias seguridad']<-'guardias seguridad'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='bomberos']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='militar']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='oficiales de la fuerza aerea']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='policia']<-'militares y fuerza publica'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='obreros de construccion']<-'obreros de construccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='electricista']<-'obreros de construccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='peluqueros y afines']<-'peluqueros y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='periodistas y escritores']<-'periodistas y escritores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='mesero']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='panadero y afines']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal de restaurantes']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='cocineros']<-'personal de restaurantes'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal de servicio a bordo']<-'personal de servicio a bordo'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='lavadores de vehiculos']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal limpieza']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='recolectores de basura']<-'personal limpieza'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agente de seguros y seguridad social']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='agente inmobiliario']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='empleados agencias de viajes']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='empleados de centros de llamadas']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal secretaria']<-'personal secretaria'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='madre comunitaria']<-'personal servicio comunitario'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal religioso']<-'personal servicio comunitario'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal servicios financieros']<-'personal servicios financieros'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal transporte']<-'personal transporte'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor preescolar']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor primaria']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor secundaria']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='profesor universitario']<-'profesores'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='estudiante']<-'estudiante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='economistas']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='politologo y afines']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='psicologos']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='sociologo, antropologo']<-'psicologos, sociologos y afines'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='quimicos']<-'quimicos'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='servicios apoyo produccion']<-'servicios apoyo produccion'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='taxistas']<-'taxistas'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='asistentes medicos']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='enfermero']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='fisioterapeuta']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='medico']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='nutricionista']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='odontologos']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='optometrista']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='veterinario']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='personal ingresos hospitalarios']<-'trabajadores de la salud'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor ambulante']<-'vendedor ambulante'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='farmaceutico']<-'vendedor tienda'
dta_covida$ocup_cat[dta_covida$ocupacion_desagregada_fx=='vendedor tienda']<-'vendedor tienda'
dta_covida<- dta_covida %>% mutate(ocup_cat_agg=ifelse(ocup_cat=="biologo y afines" |
ocup_cat=="abogados"|
ocup_cat=="ingeniero y servicios informaticos" |
ocup_cat=="personal ingenieria mecanica" |
ocup_cat=="psicologos, sociologos y afines", "Abogados, Ingenieros, Psicólogos, Biólogos, y Sociólogos",
ifelse(ocup_cat=="vendedor ambulante" |
ocup_cat=="peluqueros y afines" |
ocup_cat=="vendedor tienda", "vendedores, restaurantes, y peluqueros",
ifelse(ocup_cat=="desempleado"|
ocup_cat=="ama de casa" |
ocup_cat=="pensionado","amas de casa, pensionados, y desempleados",
ifelse(ocup_cat=="cuidador de niños" |
ocup_cat=="personal limpieza",
"personal de limpieza y cuidadores de niños",
ifelse(ocup_cat=="personal transporte" |
ocup_cat=="guardias seguridad" |
ocup_cat=="militares y fuerza publica" |
ocup_cat=="taxistas", "guardias de seguridad, taxistas y otros transportistas",
ifelse(ocup_cat=="estudiante" |
ocup_cat=="profesores", "estudiantes y profesores",
ifelse(ocup_cat=="carpinteros y afines" |
ocup_cat=="obreros de construccion", "obreros de construcción y carpinteros",
ifelse(ocup_cat=="artistas y actividades culturales" |
ocup_cat=="periodistas y escritores","periodistas, escritores, y artistas",ocup_cat)))))))))
descriptive_ocups_agg<- dta_covida %>%
group_by(ocup_cat_agg,ocup_cat,ocupacion_desagregada_fx) %>%
summarise(positive=mean(positive, na.rm=TRUE),n=n(),.groups='drop')
savethis <- dta_covida %>%
select(ocup_cat,ocupacion_desagregada_fx, ocupacionasis, ocupacion_desagregada)%>%
filter(!is.na(ocup_cat))  #Missing ocup_cat
savethis<- savethis %>%
group_by(ocup_cat,ocupacionasis) %>%
summarise(positive=first(ocupacion_desagregada))
population<-read_dta("C:/Users/cdelo/Dropbox/Iceberg Paper/Data/pob_cats.dta")
savethis2 <- merge(savethis,population, by="ocup_cat")
write_dta(savethis2, "C:/Users/cdelo/Dropbox/Iceberg Paper/Data/cats_new_fixed.dta")
library("rgdal")
library("geojsonio")
library("DescTools")
coles<- geojson_read("C:/Users/cdelo/Desktop/coles_col.json", what = "sp")
library("rgdal")
library("geojsonio")
library("DescTools")
coles<- geojson_read("C:/Users/cdelo/Desktop/coles_col.json", what = "sp")
library("rjson")
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.json", collapse=""))
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.json", collapse="")
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.json")
?fromJSON
json_data <- fromJSON("C:/Users/cdelo/Desktop/coles_col.txt")
json_data <- fromJSON(file="C:/Users/cdelo/Desktop/coles_col.txt")
library("rgdal")
library("geojsonio")
library("DescTools")
library("rjson")
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/")
library("rjson")
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result$features[[830]]$geometry[result$features[[830]]$geometry$x == "NaN"] <- NA
View(result)
a<-data.frame(
FID= results$features$attributes$FID
)
a<-data.frame(
FID= result$features$attributes$FID
)
lapply(result,'[[',1)
a<-lapply(result,'[[',1)
View(a)
a<-data.frame(lapply(result,'[[',1))
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result$features[[830]]$miss[result$features[[830]]$geometry$x == "NaN"] <- NA
is.na(result$features[[830]]$geometry)
is.na(result$features[[830]]$miss)
rapply(result$features$geometry,function(x) ifelse(x=="NaN",NA,x), how = "replace")
row.has.na <- apply(final, 1, function(x){is.na(result$features[[830]]$miss)})
row.has.na <- apply(result, 1, function(x){is.na(result$features[[830]]$miss)})
row.has.na <- apply(result$features, 1, function(x){is.na(result$features[[830]]$miss)})
row.has.na <- apply(result$features, 1, function(x){is.na(result$features[[x]]$miss)})
View(result)
result[[830]] <-null
result[[830]] <- NULL
View(result)
result$features[[830]] <- NULL
View(result)
?ifelse
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result$features[[830]]$miss[result$features[[830]]$geometry$x == "NaN"] <- NA # this also works
is.na(result$features[[830]]$geometry)
is.na(result$features[[830]]$miss)
result$features[[830]]<- ifelse(is.na(result$features[[830]]$miss)==TRUE, NULL , result$features[[830]])
result$features[[830]]<- ifelse(is.na(result$features[[830]]$miss) = TRUE, NULL , result$features[[830]])
result$features[[830]]<- ifelse(is.na(result$features[[830]]$miss), NULL , result$features[[830]])
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result$features[[830]]$miss[result$features[[830]]$geometry$x == "NaN"] <- NA # this also works
is.na(result$features[[830]]$geometry)
is.na(result$features[[830]]$miss)
result$features[[830]][result$features[[830]]$miss == NA] <- NULL
View(result)
result$features[[830]][result$features[[830]]$miss == TRUE] <- NULL
View(result)
result$features[[830]] <- NULL # THIS WORKS
View(result)
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result$features[[830]]$miss[result$features[[830]]$geometry$x == "NaN"] <- NA # this also works
write_json(result,  "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json", pretty = TRUE, na = FALSE, auto_unbox = FALSE)
library('jsonlite')
write_json(result,  "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json", pretty = TRUE, na = FALSE, auto_unbox = FALSE)
results2<-toJSON(result)
writeLines(results2, "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/")
library("rjson")
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
a<- geojson_read("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json", what = "sp")
library("rgdal")
library("geojsonio")
library("DescTools")
library("rjson")
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/")
library("rjson")
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
library("rjson")
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
result <- fromJSON(txt = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
View(result)
result[["features"]][["geometry"]][["y"]]
View(result[["features"]][["geometry"]])
result$features[[830]]$geometry$x[result$features[[830]]$geometry$x == "NaN"] <- 1 # this also works
result$features[[830]]$geometry$x[result$features[[830]]$geometry$x == "NaN"] <- 12 # this also works
result$features[[830]]$geometry$x[result$features[[830]]$geometry$x == NaN] <- 12 # this also works
result$features[[830]]$geometry$x[result$features[[830]]$geometry$x == "NaN"] <- "a" # this also works
# Give the input file name to the function.
result <- fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
# Give the input file name to the function.
result <- rjson::fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
View(result)
result$features[[830]]$geometry$x[result$features[[830]]$geometry$x == "NaN"] <- 0 # this also works
View(result)
result$features[[830]]$geometry
result$features[[829]]$geometry
result$features[[830]]$geometry$y[result$features[[830]]$geometry$y == "NaN"] <- 0 # this also works
result$features[[829]]$geometry
result$features[[830]]$geometry
result$features[[830]]$geometry$x <- as.numeric(result$features[[830]]$geometry$x) # this also works
result$features[[830]]$geometry$y <- as.numeric(result$features[[830]]$geometry$y) # this also works
result$features[[830]]$geometry
results2<- rjson::toJSON(result)
writeLines(results2, "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json")
RESULTS3<- geojson_read("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json", what = "sp")
# Give the input file name to the function.
result <- rjson::fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json")
View(result)
length(result$features)
for (feat in 1:length(result$features)){
result$features[[feat]]$geometry$x[result$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
result$features[[feat]]$geometry$y[result$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
result$features[[feat]]$geometry$x <- as.numeric(result$features[[feat]]$geometry$x) # this also works
result$features[[feat]]$geometry$y <- as.numeric(result$features[[feat]]$geometry$y) # this also works
}
# Give the input file name to the function.
result <- rjson::fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json")
# Load the package required to read JSON files.
library("rjson")
# Give the input file name to the function.
result <- rjson::fromJSON(file = "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json")
for (feat in 1:length(result$features)){
result$features[[feat]]$geometry$x[result$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
result$features[[feat]]$geometry$y[result$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
result$features[[feat]]$geometry$x <- as.numeric(result$features[[feat]]$geometry$x) # this also works
result$features[[feat]]$geometry$y <- as.numeric(result$features[[feat]]$geometry$y) # this also works
}
results2<- rjson::toJSON(result)
writeLines(results2, "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json")
RESULTS3<- geojson_read("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json", what = "sp")
View(RESULTS3)
View(RESULTS3@data)
writeLines(results2, "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
RESULTS3<- geojson_read("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4N.json", what = "sp")
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/")
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3, StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, rjson::fromJSON(file = path))
}
View(`Yacimientos-1`)
?list
df <- list(`Yacimientos-1`,`Yacimientos-2`,`Yacimientos-3`,`Yacimientos-4`,`Yacimientos-5`,`Yacimientos-6`,`Yacimientos-7`,`Yacimientos-8`)
df <-lapply(df, function(elem){ for (feat in 1:length(elem$features)){
elem$features[[feat]]$geometry$x[elem$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
elem$features[[feat]]$geometry$y[elem$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
elem$features[[feat]]$geometry$x <- as.numeric(elem$features[[feat]]$geometry$x) # this also works
elem$features[[feat]]$geometry$y <- as.numeric(elem$features[[feat]]$geometry$y) # this also works
elem <- rjson::toJSON(elem)
}
writeLines(result, "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/Yacimientos-4.json")
;return(x)
})
df <-lapply(df, function(elem){ for (feat in 1:length(elem$features)){
elem$features[[feat]]$geometry$x[elem$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
elem$features[[feat]]$geometry$y[elem$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
elem$features[[feat]]$geometry$x <- as.numeric(elem$features[[feat]]$geometry$x) # this also works
elem$features[[feat]]$geometry$y <- as.numeric(elem$features[[feat]]$geometry$y) # this also works
}
elem <- rjson::toJSON(elem)
})
View(`Yacimientos-4`)
View(df)
df[[4]]
for (feat in 1:length(`Yacimientos-2`$features)){
`Yacimientos-2`$features[[feat]]$geometry$x[`Yacimientos-2`$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
`Yacimientos-2`$features[[feat]]$geometry$y[`Yacimientos-2`$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
`Yacimientos-2`$features[[feat]]$geometry$x <- as.numeric(`Yacimientos-2`$features[[feat]]$geometry$x) # this also works
`Yacimientos-2`$features[[feat]]$geometry$y <- as.numeric(`Yacimientos-2`$features[[feat]]$geometry$y) # this also works
}
a<-names[1]
for (feat in 1:length(a$features)){
a$features[[feat]]$geometry$x[a$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
a$features[[feat]]$geometry$y[a$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
a$features[[feat]]$geometry$x <- as.numeric(a$features[[feat]]$geometry$x) # this also works
a$features[[feat]]$geometry$y <- as.numeric(a$features[[feat]]$geometry$y) # this also works
}
a[1]
a[[1]]
for (feat in 1:length(a[1]$features)){
a[1]$features[[feat]]$geometry$x[a[1]$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
a[1]$features[[feat]]$geometry$y[a[1]$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
a[1]$features[[feat]]$geometry$x <- as.numeric(a[1]$features[[feat]]$geometry$x) # this also works
a[1]$features[[feat]]$geometry$y <- as.numeric(a[1]$features[[feat]]$geometry$y) # this also works
}
for (i in names){
for (feat in 1:length(result$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
assign(i, rjson::toJSON(i))
writeLines(i, "C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/i.json")
}
for (i in names){
for (feat in 1:length(result$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
}
for (i in names){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
}
A <- lapply(names,get)
View(A)
A2<-lapply(A, function(i){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
}
)
View(A2)
df <- list(explotacion1983,exploracion,explotacion1932)
df <-lapply(df, function(x){ x$area_ha <- (area(x)/10000);return(x)})
df <-lapply(df, function(x){ x$check_ha <- (x$area_ha-x$pdd_chc);return(x)})
lapply(df, function(x){ summary(x$check_ha)}) # my measure of hectares is different from theirs...we can use both and simply see what happens
#Indicator-----
df <-lapply(df, function(x){ x$mina <- 1;return(x)})
View(df)
A2<-lapply(A, function(i){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}; return(i)
}
)
View(A2)
A3<-lapply(A, function(i){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
i<- rjson::toJSON(i)
; return(i)
}
)
View(A3)
for (i in seq_along(A3)) {
filename = paste(names[i],"n.json",sep="")
writeLines(A3[[i]], filename)
}
files <- list.files( pattern="*n.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3 , StrPos(files,".json")-1)
names <- substr(files, 3 , StrPos(files,".json")-2)
names <- substr(files, 3 , StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, geojson_read(path, what = "sp"))
}
?splist
top<-length(names)
splist<-list()
for (j in 1:top){
z <- j
sEOG <- paste("Yacimientos-", z, sep="")
dEOG <- get(paste("Yacimientos-", z, sep=""))
splist[[sEOG]] <-dEOG
}
setwd("C:/Users/cdelo/Documents/GitHub/Mining_Chile/Yacimientos/")
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3, StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, rjson::fromJSON(file = path))
}
yaci <- lapply(names,get)
yaci<-lapply(yaci, function(i){
for (feat in 1:length(i$features)){
i$features[[feat]]$geometry$x[i$features[[feat]]$geometry$x == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$y[i$features[[feat]]$geometry$y == "NaN"] <- 0 # this also works
i$features[[feat]]$geometry$x <- as.numeric(i$features[[feat]]$geometry$x) # this also works
i$features[[feat]]$geometry$y <- as.numeric(i$features[[feat]]$geometry$y) # this also works
}
i<- rjson::toJSON(i)
; return(i)
}
)
for (i in seq_along(yaci)) {
filename = paste(names[i],".json",sep="")
writeLines(yaci[[i]], filename)
}
files <- list.files( pattern="*.json", full.names=TRUE, recursive=FALSE)
names <- substr(files, 3 , StrPos(files,".json")-1)
for(i in names){
path=paste(i,".json",sep="")
assign(i, geojson_read(path, what = "sp"))
}
top<-length(names)
splist<-list()
for (j in 1:top){
z <- j
sEOG <- paste("Yacimientos-", z, sep="")
dEOG <- get(paste("Yacimientos-", z, sep=""))
splist[[sEOG]] <-dEOG
}
Yacimientos = do.call(rbind, splist)
View(splist)
